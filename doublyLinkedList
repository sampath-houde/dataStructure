#include <stdio.h>
#include <stdlib.h>

struct node {
    int data;
    struct node *prev;
    struct node *next;
};
int pos;
struct node *head = NULL;
struct node *tail = NULL;

int length()
{
    int length=0;
    struct node *temp;
    temp = head;
    if(head == NULL)
    {
        return 0;
    }
    else
    {
        while(temp != NULL)
        {
            temp = temp -> next;
            length++;
        }
        return length;
    }
}

void insertFirstNode()
{
    struct node *newnode;
    newnode = (struct node*)malloc(sizeof(struct node));
    newnode -> next = NULL;
    newnode -> prev = NULL;
    scanf("%d", &newnode -> data);
    head = tail = newnode;
    printf("Node Inserted Successfully. \n");
}

void insert()
{
    int len = length();
    struct node *newnode;
    printf("Enter the position: ");
    scanf("%d", &pos);
    printf("\n");
    if(pos < 1 || pos > len)
    printf("Invalid Input \n\n");
    else
    {
        newnode = (struct node*)malloc(sizeof(struct node));
        newnode -> next = NULL;
        newnode -> prev = NULL;
        printf("Enter the value: ");
        scanf("%d", &newnode -> data);
        printf("\n");
        if(pos == len)  // Insert when at end 
        {
            tail -> next = newnode;
            newnode -> prev = tail;
            
            tail = newnode;
            printf("Node Inserted Successfully. \n");
        }
        else
        if(pos == 1 && len !=0)  // Insert at beginning when len is not equal 0
        {
            head -> prev = newnode;   
            newnode -> next = head;
            newnode -> prev = NULL;
            head = newnode;
            printf("Node Inserted Successfully. \n");
        }
        else
        {
            int i = 1;
            struct node *temp;
            temp = head;
            while(i<pos-1)
            {
                temp = temp -> next;
                i++;
            }
            newnode -> next = temp -> next;
            newnode -> prev = temp;
            temp -> next = newnode;
            temp -> next -> prev = newnode;
            printf("Node Inserted Successfully. \n");
        }
    }
}

void delete()
{
    int len = length();
    struct node *temp;
    printf("Enter a position: ");
    scanf("%d", &pos);
    printf("\n");
    if(pos < 1 || pos > len)
    {
        printf("Enter Valid Input. \n\n");
    }
    else
    {
        if(len == 0)
        {
            printf("No nodes in the list to delete. \n\n");
        }
        else if(pos == 1 && len !=0)   // Delete at beginning.
        {
            temp = head;
            head = head -> next;
            head -> prev = NULL;
            free(temp);
            printf("Node Deleted Successfully. \n\n");
        } 
        else if(pos == len)
        {
            temp = tail;
            tail -> prev -> next = NULL;
            tail = tail -> prev;
            free(temp);
            printf("Node Deleted Successfully. \n\n");
        } else
        {
            temp = head;
            int i=1;
            while(i<pos) 
            {
                temp = temp -> next;
                i++;
            }
            temp -> prev -> next = temp -> next;
            temp -> next -> prev = temp -> prev;
            free(temp);
            printf("Node Deleted Successfully. \n\n");
        }
    }
}

void reverse()
{
    int len;
    len = length();
    if(len == 0)
    {
        printf("The list cannot be reversed");
    }
    else
    {
        struct node *currentNode, *nextNode;
        currentNode = head;
        while(currentNode != NULL)
        {
            nextNode = currentNode -> next;
            currentNode -> prev = currentNode -> next;
            currentNode -> next = nextNode;
        }
        printf("List reverse Successfull. \n\n");
    }
}

void display() {
    struct node *temp;
    temp = head;
    printf("Elements in the list. \n");
    while(temp != NULL)
    {
        printf("-> %d", temp -> data);
        temp = temp -> next;
        
    }
    printf("\n \n");
}

int main()
{
   printf("Enter a node value: ");
   insertFirstNode();
   int i=1,ch;
   while(i == 1)
   {
       printf("1. Insert. \n");
       printf("2. Delete. \n");
       printf("3. Reverse. \n");
       printf("4. Display \n");
       printf("5. Quit. \n\n");
       printf("Enter a choice: ");
       scanf("%d", &ch);
       printf("\n \n");
       switch(ch) {
           case 1:
           {
                printf("****INSERT***** \n\n");
                insert();
           }
           break;
           
           case 2: delete(); break;
           
           case 3: reverse(); break;
           
           case 4: display(); break;
           
           case 5: i=0; break;
           
           default: printf("Invalid Input. \n"); break;
       }
   }
   return 0;
}
